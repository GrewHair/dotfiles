#set -g status-right "#{tmux_mode_indicator}"
#set -g @tmux_mode_indicator_left_edge_character ""
#set -g @tmux_mode_indicator_separator "✤"

# set zsh to be the default shell
set-option -g default-shell /usr/bin/zsh

# no vim-like escape delay (tmux-sensible)
set -s escape-time 0

# tmux messages last 4 seconds (tmux-sensible)
set -g display-time 4000

# vi navigation
setw -g mode-keys vi
#set -g status-keys vi
set -g status-keys emacs

# copy to clipboard
# bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -i -sel p -f | xclip -i -sel c'
bind -T copy-mode-vi y send-keys -X copy-pipe 'xclip -i -sel p -f | xclip -i -sel c'
#bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel 'xclip -i -sel p -f | xclip -i -sel c'

#bind -T root MouseDown2Pane

# speak with mimic
bind -T copy-mode-vi m send-keys -X copy-pipe 'xclip -in -selection clipboard' \; run-shell -b '/home/boris/bin/i3/run-mimic.sh &'

# change prefix to something less obtrusive
unbind C-b
set -g prefix C-s
set -g prefix2 C-l
bind-key C-s send-prefix
bind-key C-l send-keys C-l

# last session
bind-key C-i switch-client -l
bind-key Tab switch-client -l

# list sessions
bind-key b choose-tree -Zs

# vim-like splits
bind-key v split-window -h
bind-key s split-window

# copy mode
bind-key C-[ copy-mode
bind-key C-g copy-mode

# paste from tmux buffer
bind-key P paste-buffer

# easier pane resizing
bind-key -r [ resize-pane -L
bind-key -r ] resize-pane -R
bind-key -r \{ resize-pane -U
bind-key -r \} resize-pane -D

# easier pane navigation
unbind l
bind-key C-S-l last-window
bind-key -r h select-pane -L
bind-key -r j select-pane -D
bind-key -r k select-pane -U
bind-key -r l select-pane -R

# easier pane moving
bind-key -r H swap-pane -U
bind-key -r J swap-pane -D
bind-key -r K swap-pane -U
bind-key -r L swap-pane -D

# easier layout cycling
bind-key -r Space next-layout

# aliases
set -s command-alias[0] im='run "/home/boris/bin/i3/set_terminal_background_image.sh"'

set-option -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

bind-key -n MouseDown2Pane run "tmux set-buffer -b primary_selection \"$(xsel -o)\"; tmux paste-buffer -b primary_selection; tmux delete-buffer -b primary_selection"

#unbind -T copy-mode MouseDragEnd1Pane
#unbind -T copy-mode-vi MouseDragEnd1Pane
#unbind -T copy-mode MouseDrag1Pane
#unbind -T copy-mode-vi MouseDrag1Pane

# Tmux plugin manager (copied over from http://github.com/tmux-plugins/tpm)
# List of plugins
#set -g @plugin 'tmux-plugins/tpm'
#set -g @plugin 'tmux-plugins/tmux-sensible'
#set -g @plugin 'dominikduda/tmux_mode_indicator'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
# NOTE there's a bug: https://bugs.launchpad.net/ubuntu/+source/tmux-plugin-manager/+bug/1812387
# and so it crashes the whole thing upon the terminal start. So for now I'm giving up on tpm
# run '~/.tmux/plugins/tpm/tpm'

bind-key -n M-h if-shell 'test $(tmux display-message -p "#{pane_at_left}") -eq 1' "run 'i3-msg \"focus left\" > /dev/null'" "select-pane -L"
bind-key -n M-j if-shell 'test $(tmux display-message -p "#{pane_at_bottom}") -eq 1' "run 'i3-msg \"focus left\" > /dev/null'" "select-pane -D"
bind-key -n M-k if-shell 'test $(tmux display-message -p "#{pane_at_top}") -eq 1' "run 'i3-msg \"focus up\" > /dev/null'" "select-pane -U"
bind-key -n M-l if-shell 'test $(tmux display-message -p "#{pane_at_right}") -eq 1' "run 'i3-msg \"focus right\" > /dev/null'" "select-pane -R"

#run 'notify-send foo `tmux display-message -p "#{client_name}"`'
#something like:
#tmux select-pane -t <client name here> -[U|D|L|R]

bind-key -n DoubleClick3Pane display-message foo
#bind-key -n
